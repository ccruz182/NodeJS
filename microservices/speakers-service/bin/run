#!/usr/bin/env node

const http = require("http");
const axios = require("axios");

const config = require("../config")[process.env.NODE_ENV || "development"];

const log = config.log();
const service = require("../server/service")(config);

const server = http.createServer(service);

const SERVICE_REGISTRY_URL = "http://localhost:3000";

const registerService = () =>
  axios.post(`${SERVICE_REGISTRY_URL}/services`, {
    name: config.name,
    version: config.version,
    port: server.address().port,
  });

const unRegisterService = () => {
  console.log("DELETE", config.name, config.version, server.address().port);
  return axios.delete(`${SERVICE_REGISTRY_URL}/services`, {headers: {}, data: {
    name: config.name,
    version: config.version,
    port: server.address().port,
  }});
};

// Important - a service should not have a fixed port but should randomly choose one
server.listen(process.env.PORT || 4000);

server.on("listening", () => {
  // Registering
  registerService();
  const interval = setInterval(registerService, 20000);
  const cleanUp = async () => {
    clearInterval(interval);
    await unRegisterService();
  };

  log.info(
    `Hi there! I'm listening on port ${server.address().port} in ${service.get(
      "env"
    )} mode.`
  );

  process.on("uncaughtException", async () => {
    await cleanUp();
    process.exit(0);
  });

  process.on("SIGINT", async () => {
    await cleanUp();
    process.exit(0);
  });

  process.on("SIGTERM", async () => {
    await cleanUp();
    process.exit(0);
  });
});
